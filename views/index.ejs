<!DOCTYPE html>
<html>
    <head>
        <title>Repo Dependency Checker</title>
        <link rel="stylesheet" href="/static/css/bootstrap.min.css">
        <link href="https://fonts.googleapis.com/css?family=Fugaz+One&display=swap" rel="stylesheet">
        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel='shortcut icon' type='image/x-icon' href='/images/favicon.ico' />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    </head>
    <body>

        <nav class="navbar navbar-dark bg-primary navbar-expand-lg">
            <a class="navbar-brand brand" href="#">Repo Dependency Checker</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav">
                    <li class="nav-item active">
                        <a class="nav-link" href="#">Compose Validation</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/repo">Repo Validation</a>
                    </li>
                </ul>
                <span class="navbar-text ml-auto">
                    <i class="fa fa-github"></i> <%= username %>
                </span>
            </div>
        </nav>

        <div class="container">
            <h2 class="mt-3">Compose Validation</h2>
            <form class="form">
                <div class="form-group">
                    <label for="composeUrl">URL to file</label>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="basic-addon3">https://github.com/</span>
                        </div>
                        <input type="text" class="form-control" id="composeUrl">
                    </div>
                </div>
                <div class="form-group form-check">
                    <input type="checkbox" class="form-check-input" id="strictCheck">
                    <label class="form-check-label" for="strictCheck">Strict Check</label>
                </div>
                <button type="submit" class="btn btn-primary" id="validate-btn">Go!</button>
                <span class="spinner-grow spinner-grow-sm invisible btn-loading-go" role="status"></span>
            </form>
            <div class="validation-result" style="display:none;">
                <hr/>
                <h3>Result</h3>
                <div><div>
            </div>
        </div>
        <script src="/static/js/jquery.min.js"></script>
        <script src="/static/js/bootstrap.min.js"></script>
        <script src="/static/js/handlebars.js"></script>
        <script>
            Handlebars.registerHelper('ifeq', function(arg1, arg2, options) {
                return (arg1 == arg2) ? options.fn(this) : options.inverse(this);
            });
        </script>
        <script id="validation-result-template" type="text/x-handlebars-template">
            <ul>
                {{#each repos}}
                <li><strong>{{name}} v{{version}}</strong> <a href="#" class="app-detail-btn" data-app-repo="{{name}}" data-release="{{version}}">More &gt;</a>
                    <ul>
                        {{#each dependencies}}
                        <li>{{name}}
                            <ul>
                                <li>Required: {{validation.required}}</li>
                                <li>Actual: {{validation.actual}}</li>
                                <li class="{{#ifeq validation.status 'OK'}}text-success{{/ifeq}} {{#ifeq validation.status 'NOT_FOUND'}}text-secondary{{/ifeq}} {{#ifeq validation.status 'NOT_SATISFIED'}}text-danger{{/ifeq}}">
                                    Status: {{validation.status}}
                                </li>
                            </ul>
                        </li>
                        {{/each}}
                    </ul>
                </li>
                {{/each}}
            </ul>
        </script>
        <script>
            var githubUrlRoot = 'https://github.com/'
            var composeUrl = getURLParameter('composeUrl')
            if(composeUrl && composeUrl.startsWith(githubUrlRoot)) {
                $('#composeUrl').val(composeUrl.split('https://github.com/')[1]);
            } else {
                $('#composeUrl').val(composeUrl);
            }
            var source   = document.getElementById("validation-result-template").innerHTML;
            var template = Handlebars.compile(source);
            $('#composeUrl').on('paste', function(e) {
                var $input = $(this)
                var text = e.originalEvent.clipboardData.getData('text');
                setTimeout(function () {
                    if($input.val().indexOf(githubUrlRoot) > -1){
                        $input.val(text.split(githubUrlRoot)[1])
                    }
                }, 100);
            })
            $('#validate-btn').on('click', function(event) {
                event.preventDefault();
                $('.btn-loading-go').removeClass('invisible');
                $('.validation-result').hide();
                var pathSegments = $('#composeUrl').val().split('/');
                var organization = pathSegments[0]
                var repo = pathSegments[1]
                var composeRef = pathSegments[3]
                var composePath = pathSegments[4].replace('.yml', '')
                var strictCheck = $('#strictCheck').prop('checked')
                if(organization && repo && composePath && composeRef){
                    var jqxhr = $.get( "/api/validate/" + organization + '/' + repo + '/' + composeRef + '/' + composePath + (strictCheck? '?strict=true' : ''))
                        .done(function(response) {
                            var html = template({repos: response});
                            $('.validation-result div').html(html)
                            $('.validation-result').show()
                        })
                        .fail(function(error) {
                            if(error.responseJSON.message && error.responseJSON.message.status){
                                alert(error.responseJSON.message.status + ': ' + error.responseJSON.message.name)
                            } else {
                                alert(error.status + ': ' + error.responseJSON.message)
                            }
                        })
                        .always(function(){
                            $('.btn-loading-go').addClass('invisible');
                        })
                }
            })
            $('.validation-result').on('click', '.app-detail-btn', function(event){
                event.preventDefault()
                $a = $(event.target)
                window.location = '/repo?composeUrl=' + $('#composeUrl').val() + '&appRepo=' + $a.data('appRepo') + '&release=' + $a.data('release');
            })
            function getURLParameter(sParam) {
                var sPageURL = window.location.search.substring(1);
                var sURLVariables = sPageURL.split('&');
                for (var i = 0; i < sURLVariables.length; i++) {
                    var sParameterName = sURLVariables[i].split('=');
                    if (sParameterName[0] == sParam) {
                        return sParameterName[1];
                    }
                }
            }
        </script>
    </body>
</html>
